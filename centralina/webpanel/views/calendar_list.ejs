<% include header.ejs %>

<script type="text/javascript">
    var DATA_URL = '<%= api_url %>';
    var VIEW_URL = '<%= resources_url %>';
    $.ajaxSetup({ cache: false });
</script>

<div class="modal fade" 
    id="confirm-delete" 
    tabindex="-1" 
    role="dialog" 
    aria-labelledby="myModalLabel" 
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" 
                    class="close" 
                    data-dismiss="modal" 
                    aria-hidden="true">&times;</button>
                    <h4 class="modal-title" 
                        id="myModalLabel">Confirm Delete</h4>
            </div>

            <div class="modal-body">
                <p>You are about to delete the calendar time-table, this procedure is irreversible.</p>
                <p>Do you want to proceed?</p>
                <p class="user-to-delete"></p>
            </div>

            <div class="modal-footer">
                <button type="button" 
                    class="btn btn-default" 
                    data-dismiss="modal">Cancel</button>
                <a id="the-delete-timetable-btn" href="" class="btn btn-danger danger">Delete</a>
            </div>
        </div>
    </div>
</div>

<div id="container">
    <div id="alerttt-placeholder"></div>
    <div class="breadcrumbs">
        <a href="/">Home</a> > <%= title %>
    </div>
    
    <h1 class="page-header">Calendar list</h1>
    <br/>
    <div id="tables"></div>
    
</div>

<script type="text/javascript">

"use strict";

var nodes = [];
var new_row_to_add = -1;

$(document).ready(function() {
    $.getJSON( DATA_URL+'/machines' , function(_nodes) {
        nodes = _nodes;
    }).then( loadGroups );
});

function loadGroups() {
    $.getJSON( DATA_URL+'/groups' , function(groups) {
        groups.forEach(function(g) {
            generateGroupCalendar(g);
        });
    });
}

function generateGroupCalendar(g) {

    function _generateGroupCalendarTableHeader() {
        var tableId = 'calendarList'+g.group_id;
        var th = '<h2>'+g.description+'</h2>'+
                '<table class="table table-hover" id="'+tableId+'">'+
                '    <thead>'+
                '        <tr>'+
                '            <th>#</th>'+
                '            <th>Gateway</th>'+
                '            <th>Day</th>'+
                '            <th>Start</th>'+
                '            <th>End</th>'+
                '            <th>Active</th>'+
                '            <th></th>'+
                '        </tr>'+
                '    </thead>'+
                '    <tbody></tbody>'+
                '</table>'+
                '<br/>';
        $('#tables').append(th);
        return tableId;
    }

    var tableId = _generateGroupCalendarTableHeader();
    var calendar_path = DATA_URL+'/calendar/'+g.group_id;
    $.getJSON(calendar_path, function(calendars) { 
        for(var i=0; i<calendars.length; i++) {
            var c = calendars[i];
            var rowId = generateCalendarRow(tableId, c.calendar_id, g);
            fillCalendarRowFromJSON(rowId, g, c);
        }
        // add one more empty row for further insertion
        generateCalendarRow(tableId, new_row_to_add--, g);
    });
}

function generateCalendarRow(tableId, calendar_id, g) {

    function _generateRowDOM(tableId) {
        var rowId = 'calendarRow'+calendar_id;
        var tr = '<tr id="'+rowId+'">'+
                 '    <th class="calendar-row id">'+(calendar_id>=0?calendar_id:'')+'</th>'+
                 '    <th class="calendar-row node">'+getNodeDropdown()+'</th>'+
                 '    <th class="calendar-row day">'+getDayDropdwon()+'</th>'+
                 '    <th class="calendar-row start">'+getHoursDropDown()+'</th>'+
                 '    <th class="calendar-row end">'+getHoursDropDown()+'</th>'+
                 '    <th class="calendar-row ractive">'+getActiveDropdown()+'</th>'+
                 '    <th class="calendar-row submit"><a><span class="glyphicon glyphicon-ok"></span></a></th>';
        if(calendar_id>=0) {
            tr += _addDeleteModal();
        }
        tr += '</tr>';
        $('#'+tableId+' > tbody:last').append( tr );
        return rowId;
    }

    function _addDeleteModal(tr) {
        var deleteTr = '';
        deleteTr += '    <th class="calendar-row delete">';
        deleteTr += '<a data-toggle="modal" data-target="#confirm-delete">';
        deleteTr += '<span class="glyphicon glyphicon-trash"></span></a></th>';
        return deleteTr;
    }

    function _addDropdownMouseControls(tableId) {
        
        var dropdown = $('#'+rowId+' div.dropdown');
        var a_for_click = $(dropdown).find("ul.dropdown-menu li a");
        a_for_click.click(function(){
            console.log('dudee');
            var current_dropdown = $(this).closest('div.dropdown');
            var current_dropdown_button = current_dropdown.find('button');
            $(current_dropdown_button).html( $(this).text()+' <span class="caret"></span>' );
            current_dropdown.find('ul li a').removeClass('btn-primary');
            $(this).addClass('btn-primary');
            var current_th = $(this).closest('th'); // .data( 'db', $(this.data('db')) );
            $(current_th).data( 'db', ''+$(this).data('db') );
        });
    }

    function _addSubmitMouseControl(rowId) {
        var submit = $('#'+rowId+' > th.submit');
        submit.click(function() {
            var selected_values = {};
            var row = $(this).closest('tr');
            var ths = row.find('th');
            for(var i=0; i<ths.length; i++) {
                var th = $(ths[i]);
                var key = th.attr('class').split(' ')[1];
                var value = th.data('db');
                selected_values[key] = th.data('db');
            }
            selected_values['group_id'] = g.group_id;
            selected_values['id'] = $(ths[0]).text();
            delete selected_values['submit'];
            delete selected_values['delete'];

            sendToTheServer(selected_values);
        });
    }
    
    function _addDeleteMouseControlModal(rowId) {
        var del = $('#'+rowId+' > th.delete');
        del.click(function() {
            var row = $(this).closest('tr');
            var ths = row.find('th');

            $('#confirm-delete').on('show.bs.modal', function() {
                var btnDelete = $('#confirm-delete').find('.btn.danger');
                btnDelete.unbind("click");
                btnDelete.click(function(e) {
                    e.preventDefault();
                    $('#confirm-delete').modal('hide');
                    
                    sendDeleteAjax( $(ths[0]).text(), row);
                    return false;
                });
            });       
        });
    }

    var rowId = _generateRowDOM(tableId);
    _addDropdownMouseControls(rowId);
    _addSubmitMouseControl(rowId);
    _addDeleteMouseControlModal(rowId);

    return rowId;
}

function sendDeleteAjax(calendar_id, row) {
    var path_to_delete = DATA_URL+'/calendar/id/'+calendar_id;
    $.ajax({
        url: path_to_delete,
        type: 'DELETE',
        success: function() {
            onSuccess('Calendar timetable correctly deleted', false);
            row.remove();
        }
    });

}

function onSuccess(message, flagRefresh) {
    var uniqid = Date.now();
    $('#alerttt-placeholder').append(
        '<div id="'+uniqid+'" '+
        '     class="alert alert-success" '+
        '     data-alert="alert" style="display:none;"> '+message+'</div>');
    $('#'+uniqid).slideDown().fadeIn();
    $("html, body").animate({ scrollTop: 0 }, 'fast');

    setTimeout(function() {
        $('#'+uniqid).fadeTo('slow', 0.00, function(){ //fade
             $(this).slideUp('slow', function() { //slide up
                 $(this).remove(); //then remove from the DOM
                 if(flagRefresh)location.reload();
             });
         });
    }, 3000);
}

function sendToTheServer(values) {
    console.log('sendToTheServer', values);
    for(var k in values) {
        if( values[k]==0 ) continue;
        if( !values[k] ) return;
    }

    var path_to_modify = DATA_URL + '/calendar/add';
    $.post(path_to_modify, values, function() {
        onSuccess('Calendar timetable correctly modified', true);
    }).fail(function() {
        console.log('fail');
    });
}

function fillCalendarRowFromJSON(rowId, g, c) {

    function setDropDownItem(cls, n) {
        var row = $('#'+rowId);
        var items = row.find('th.calendar-row.'+cls+' div ul li a');
        var x;
        for(var i=0; i<items.length; i++) {
            var item = $(items[i]);
            if ( item.data('db') == n) {
                x = item;
                break;
            }
        }
        if(x) {
            x.addClass('btn-primary');
            row.find('th.calendar-row.'+cls+' div button').html(x.text()+' <span class="caret"></span>');
            var th = $(row.find('th.calendar-row.'+cls));//.data('db', n);
            $(th).data('db', n);
        }
    }

    setDropDownItem('node', c.node_id);
    setDropDownItem('day', c.day);
    setDropDownItem('start', ''+c.start);
    setDropDownItem('end', ''+c.end);
    setDropDownItem('ractive', ''+c.active);
}

//--------------------------------------------------------------- dropdown factory
function getNodeDropdown(g, c) {
    var labels = [];
    var values = [];
    for(var i=0; i<nodes.length; i++) {
        values.push(nodes[i].node_id);
        labels.push(nodes[i].node_id);
    }
    return getDropdownDOM('gateway', labels, values);
}

function getDayDropdwon(g, c) {
    var labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
    var values = labels;
    return getDropdownDOM('Day', labels, values);
}

function getHoursDropDown(g, c) {
    
    var labels = []
    var values = []
    var hours, minutes, ampm;
    for(var i = 360; i <= 1380; i += 15){
        hours = Math.floor(i / 60);
        minutes = i % 60;
        if (minutes < 10){
            minutes = '0' + minutes; // adding leading zero
        }
        ampm = hours % 24 < 12 ? 'AM' : 'PM';
        hours = hours % 12;
        if (hours === 0){
            hours = 12;
        }
        values.push(i*60);
        labels.push(hours + ':' + minutes + ' ' + ampm); 
    }

    return getDropdownDOM('Start', labels, values);
}

function getActiveDropdown(g,c) {
    var labels = ['Active', 'Inactive'];
    var values = [1,0];
    return getDropdownDOM('Status', labels, values);
}

function getDropdownDOM(title, labels, values) {
    var html = 
        '<div class="dropdown">'+
        '  <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">'+
        '    '+title+
        '    <span class="caret"></span>'+
        '  </button>'+
        '  <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">';

    for(var i=0; i<labels.length; i++) {
        html += '<li role="presentation"><a data-db="'+values[i]+'" role="menuitem" tabindex="-1" href="#">'+labels[i]+'</a></li>';
    }

    html += '  </ul>';
    html += '</div>';

    return html;
}
</script>

<% include footer %>